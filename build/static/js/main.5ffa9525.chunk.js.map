{"version":3,"sources":["api/index.js","components/Activities.js","components/Login.js","components/Register.js","components/EditRoutine.js","components/DeleteRoutines.js","components/Routines.js","components/AddRoutines.js","components/Home.js","components/MyRoutines.js","components/Header.js","index.js"],"names":["BASE_URL","Activities","token","localStorage","getItem","useState","activities","setActivities","name","setName","description","setDescription","editedname","setEditedName","editeddescription","setEditedDescription","isEditing","setIsEditing","requestedRoutines","setRequestedRoutines","routinesToDisplay","setRoutinesToDisplay","idToEdit","setIdToEdit","nameToEdit","setNameToEdit","searchTerm","setSearchTerm","useEffect","fetchActivities","a","fetch","resp","json","data","filteredActivities","filter","activity","text","toLowerCase","includes","activityMatches","activitiesToDisplay","length","className","type","value","onChange","event","target","onClick","method","headers","body","JSON","stringify","then","response","result","window","location","reload","editActivity","map","disabled","id","activityId","preventDefault","alert","catch","console","error","newActivity","routine","creatorName","Login","setUsername","loginSuccess","setLoginSuccess","usernameString","setUsernameString","passwordString","setPasswordString","setToken","removeItem","username","password","log","message","user","setItem","to","Register","setPassword","ConfirmPassword","setConfirmPassword","UserRegistered","setUserRegistered","onSubmit","htmlFor","EditRoutines","routineId","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublicBoolean","setIsPublicBoolean","isEditted","setIsEditted","handleSubmit","goal","isPublic","err","laceholder","placeholder","DeleteRoutines","Routines","setFilter","routines","setRoutines","fetchRoutines","filterRoutines","filteredRoutines","routineToDisplay","onclick","routineActivityId","EditRoutine","AddRoutines","nameString","goalString","setGoal","setIsPublic","isAdded","setIsAdded","classname","Home","MyRoutines","myroutines","setMyRoutines","setActivityId","setRoutineId","setRoutineActivityId","count","setCount","duration","setDuration","addActivities","setAddActivities","pickedActivities","setPickedActivities","pickedRActivity","setPickedRActivity","editRActivity","setEditRActivity","raName","setRAname","usertoken","userusername","fetchMyRoutines","editRoutineActivity","creatorId","addActivityToRoutine","Header","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ffa9525.chunk.js","sourcesContent":["export const BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api';","import React, { useEffect, useState } from 'react'\nimport { BASE_URL } from \"../api\";\n\nconst Activities = () => {\n    const token = localStorage.getItem(\"token\")\n\n    const [activities, setActivities] = useState([])\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [editedname, setEditedName] = useState('')\n    const [editeddescription, setEditedDescription] = useState('')\n    const [isEditing, setIsEditing] = useState(false)\n    const [requestedRoutines, setRequestedRoutines] = useState(false)\n    const [routinesToDisplay, setRoutinesToDisplay] = useState([])\n    const [idToEdit, setIdToEdit] = useState('')\n    const [nameToEdit, setNameToEdit] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n\n    useEffect(() => {\n        const fetchActivities = async () => {\n            const resp = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities')\n            const data = await resp.json()\n            setActivities(data)\n        }\n        fetchActivities()\n    }, [])\n\n\n    function newActivity(name, description) {\n        fetch(`${BASE_URL}/activities`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            })\n    }\n\n    function editActivity(editedname, editeddescription) {\n        fetch(`${BASE_URL}/activities/${idToEdit}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                name: editedname,\n                description: editeddescription\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            })\n    }\n\n    function getRoutinesByActivity(activityId) {\n\n        fetch(`${BASE_URL}/activities/${activityId}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => response.json())\n            .then(result => {\n                if (result.length) {\n                    setRequestedRoutines(true)\n                    setRoutinesToDisplay(result)\n                } else {\n                    setRequestedRoutines(false)\n                    alert('Sorry, no routines for that activity!')\n                }\n            }).catch(console.error)\n    }\n\n    function activityMatches(activity, text) {\n        if (activity.name.toLowerCase().includes(text.toLowerCase())) {\n            return true\n        }\n    }\n\n    const filteredActivities = activities.filter(activity => activityMatches(activity, searchTerm));\n    const activitiesToDisplay = searchTerm.length > 0 ? filteredActivities : activities;\n\n    return (<>\n        {isEditing ?\n            <>\n                <div className=\"editactivityform\">\n                    <h1>Edit Activity Form</h1>\n                    <h2>Editing Activity: {nameToEdit}</h2>\n                    <label>Activity Name</label>\n                    <input className=\"editactivityname\" type=\"text\" value={editedname} onChange={event => { setEditedName(event.target.value) }}></input>\n                    <label>Activity Description</label>\n                    <input className=\"editactivitydescription\" type=\"text\" value={editeddescription} onChange={event => { setEditedDescription(event.target.value) }}></input>\n                    <button className=\"editactivitybutton\" onClick={function () { editActivity(editedname, editeddescription), setIsEditing(false) }}>Edit Activity!</button>\n                    <button className=\"cancelbutton\" onClick={function () { setIsEditing(false) }}>Cancel</button>\n                </div>\n            </>\n            :\n            <>\n\n                <h1>Activities</h1>\n                <div className=\"activitycontainer\">\n                    <div className=\"mapcontainer\">\n                        <div className=\"SearchEverything\">\n                            <label className=\"SearchText\">Search Posts</label>\n                            <input className=\"SearchInput\" onChange={event => setSearchTerm(event.target.value)}></input>\n                        </div>\n                        {activitiesToDisplay.map(activity => {\n                            return (\n                                <div className=\"activity\" key={activity.id}>\n                                    <div>Name: {activity.name}</div>\n                                    <div className=\"activityDescription\">Description: {activity.description}</div>\n                                    <button className=\"editButton\" disabled={requestedRoutines || !token} onClick={function () {\n                                        setIsEditing(true)\n                                        setIdToEdit(activity.id)\n                                        setNameToEdit(activity.name)\n                                    }}>Edit</button>\n\n                                    <button className=\"seeroutines\" disabled={requestedRoutines} onClick={(event) => {\n                                        event.preventDefault();\n                                        getRoutinesByActivity(activity.id)\n                                    }}>See Routines!</button>\n                                </div>\n\n                            )\n                        })}\n                    </div>\n                    <div className=\"newactivityform\">\n                        <h1>New Activity Form</h1>\n                        <label>Activity Name</label>\n                        <input className=\"newactivityname\" type=\"text\" value={name} onChange={event => { setName(event.target.value) }}></input>\n                        <label>Activity Description</label>\n                        <input className=\"newactivitydescription\" type=\"text\" value={description} onChange={event => { setDescription(event.target.value) }}></input>\n                        <button className=\"newactivitybutton\" disabled={!token} onClick={function () { newActivity(name, description) }}>Add Activity!</button>\n                    </div>\n\n                    {requestedRoutines ?\n                        <>\n                            <div className=\"routinemapcontainer\">\n                                <h1>Routines</h1>\n                                <button className=\"closebutton\" onClick={(event) => {\n                                    event.preventDefault()\n                                    setRequestedRoutines(false)\n                                }}>Close</button>\n\n                                {routinesToDisplay.map(routine => {\n                                    return (\n                                        <div className=\"routine\" key={routine.id}>\n                                            <div>Created By: {routine.creatorName}</div>\n                                            <div>Routine Name: {routine.name} </div>\n                                            <div>Activities:\n                                                {routine.activities.map(activity => {\n                                                    return (<div key={activity.id}>\n                                                        <div>{activity.name}</div>\n                                                        <div>{activity.description}</div>\n                                                    </div>)\n                                                })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </>\n                        : null\n                    }\n                </div>\n            </>\n        }\n    </>)\n}\n\nexport default Activities;","import React, {useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { BASE_URL } from \"../api\";\n\nconst Login = ({setUsername, loginSuccess, setLoginSuccess}) => {\n\n    //STATE PAIRS GO HERE\n    const [usernameString, setUsernameString] = useState('')\n    const [passwordString, setPasswordString] = useState('')\n    const [token, setToken] = useState('')\n    function loginUser(username, password) {\n        fetch(`${BASE_URL}/users/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    \"username\": username,\n                    \"password\": password\n                }\n            )\n        }).then(response => response.json())\n            .then (result => {\n                console.log(result)\n                if(result.message===\"you're logged in!\"){\n                    console.log(result)\n                    setLoginSuccess(true)\n                    setToken(result.token)\n                    setUsername(result.user.username)\n                    localStorage.setItem('token', result.token)\n                    localStorage.setItem('username', result.user.username)\n                } else {\n                    console.log(result)\n                    alert('Incorrect Credentials, try again')\n                    setLoginSuccess(false)\n                }\n                \n                return result\n            }).catch(console.error)\n    }\n\n    \n    function logoutUser(){\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        setLoginSuccess(false)\n    }\n\n    \n\n    return (\n        <div className='Login'>\n            <h1>Login</h1>\n\n            <input className=\"usernameInput\"\n                type=\"username\"\n                value={usernameString}\n                onChange={ event => setUsernameString(event.target.value) }>\n            </input>\n\n            <input className=\"passwordInput\"\n                type=\"password\"\n                value={passwordString}\n                onChange={ event => setPasswordString(event.target.value) }>\n            </input>\n\n            {loginSuccess ? <button className=\"logoutButton\" onClick={() => logoutUser()}> Logout</button> \n            :  <button className=\"loginButton\" onClick={() => loginUser(usernameString, passwordString)} > Login </button> }\n\n            \n            \n            {loginSuccess ? <Redirect to=\"/home\"/> : null }\n            {loginSuccess ? alert (`Welcome ${usernameString}!`) : null}\n            \n            \n\n            <h2> <Link className=\"Register\" to=\"/register\">Don't have an account? Sign Up!</Link></h2>\n            \n\n        </div>\n\n       \n    )\n}\nexport default Login;","import { BASE_URL } from \"../api\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Register = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [ConfirmPassword, setConfirmPassword] = useState('')\n    const [UserRegistered, setUserRegistered] = useState(false)\n\n    const Register = async () => {\n        fetch (`${BASE_URL}/users/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                    \"username\": username,\n                    \"password\": password,\n            })\n        })\n        .then(response => response.json())\n        .then (result => {\n            console.log(result)\n            if(result.message===\"you're signed up!\"){\n                alert(\"You are registered! We will re-direct you, please log in!\");\n                setUserRegistered(true)\n                setToken(result.token)\n                setUsername(result.user.username)\n                localStorage.setItem('token', result.token)\n                localStorage.setItem('username', result.user.username)\n            } else {\n                console.log(result)\n                alert('A user by that username already exists. Please login or re-register with different credentials.')\n                window.location.reload(true)\n                setLoginSuccess(false)\n            } \n            return result\n            \n        }).catch(console.error)\n}\n\n    \n    const confirmPassword = () => {\n        if (password === ConfirmPassword && password.length >= 8) {\n            Register()\n        } else {\n            alert (\"Password must be 8 characters or longer. Please try again.\")\n        }\n    }\n\n    return (\n        <div> \n            <form onSubmit={(event) => {\n                event.preventDefault()\n                confirmPassword()\n            }}> \n                <fieldset>\n                    <label htmlFor=\"Username\"> Create Username</label>\n                    <input\n                        className=\"CreateUsername\"\n                        id=\"Username\"\n                        type=\"text\"\n                        value={username}\n                        onChange={(event)=> setUsername(event.target.value)}\n                    />\n                    <label htmlFor=\"Password\"> Create Password</label>\n                    <input\n                        className=\"CreatePassword\"\n                        id=\"Password\"\n                        type=\"text\"\n                        value={password}\n                        onChange={(event)=> setPassword(event.target.value)}\n                    />\n\n                    <label htmlFor=\"Confirm Password\">Confirm Password</label>\n                        <input\n                            className=\"CreatePassword\"\n                            id=\"confirmPassword\"\n                            type=\"text\"\n                            value={ConfirmPassword}\n                            onChange={(event) => setConfirmPassword(event.target.value)}\n                        />\n                    <button\n                        type=\"submit\"\n                        name=\"event\"\n                    >Register User</button>\n\n                    {UserRegistered ? <Redirect to =\"/login\"/> : null}\n                )       \n                    \n                </fieldset>\n            </form>\n\n        </div>\n    )\n}\nexport default Register;","import { BASE_URL } from \"../api\";\r\nimport { useState } from 'react';\r\n\r\nconst EditRoutines = ({routineId, token}) => {\r\n    const [routineName, setRoutineName] = useState('')\r\n    const [routineGoal, setRoutineGoal] = useState('')\r\n    const [isPublicBoolean, setIsPublicBoolean] = useState(true)\r\n    const [isEditted, setIsEditted] = useState(false)\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"Testing Edit Routines\")\r\n        event.preventDefault();\r\n\r\n        try {\r\n            fetch(`${BASE_URL}/routines/${routineId}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                name: routineName,\r\n                goal: routineGoal,\r\n                isPublic: isPublicBoolean\r\n            })\r\n            }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setIsEditted(true)\r\n            })\r\n            .catch(console.error);\r\n        \r\n        }  catch (err) {\r\n            console.error(err)\r\n        } \r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"EditRoutine\"> \r\n                  <h1>Edit Routine</h1>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <label> Name: </label>\r\n                    <input type=\"text\" name=\"name\" value={routineName} laceholder=\"Name of Routine\" onChange={(event)=>setRoutineName(event.target.value)}/>\r\n\r\n                    <label> Goal: </label>\r\n                    <input type=\"text\" name=\"goal\" value={routineGoal} placeholder=\"Routine Goal\" onChange={(event)=>setRoutineGoal(event.target.value)}/>\r\n\r\n                    <label> Make this Public?</label>\r\n                    <input type=\"checkbox\" name=\"isPublic\" value={isPublicBoolean} onChange={(event)=> setIsPublicBoolean(event.target.value)}/>  \r\n\r\n                    <button type=\"submit\"> Finish Edit Routine </button>\r\n                </form>\r\n                {isEditted ? alert (\"You've successfully edit a routine!\") : null}\r\n                {isEditted ?  window.location.reload(true) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRoutines;\r\n","import { BASE_URL  } from \"../api\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst DeleteRoutines = ({token, routineId}) => {\r\n\r\n        const handleDelete = (event) => {\r\n            event.preventDefault()\r\n            fetch (`${BASE_URL}/routines/${routineId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                  }\r\n            }).then(response => response.json())\r\n                .then(result => {\r\n                console.log(result)\r\n                alert(\"Routine Deleted!\")\r\n                window.location.reload(true);\r\n                })\r\n                \r\n                .catch(console.error);\r\n        }\r\n        return (\r\n            <form onSubmit={handleDelete}>\r\n                <div className=\"Delete\">\r\n                    <button type=\"submit\"> Delete</button>\r\n                </div>\r\n            </form>\r\n        )\r\n}\r\nexport default DeleteRoutines;\r\n","import { BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport EditRoutines from \"./EditRoutine\";\nimport DeleteRoutines from \"./DeleteRoutines\";\n\n\nconst Routines = ({token, loginSuccess}) => {\n\n    \n    const [filter, setFilter] = useState('')\n    const [routines, setRoutines] = useState([])\n    const [username, setUsername] = useState('')\n    \n    useEffect(() => {\n        const fetchRoutines = async () => {\n            const resp = await fetch(`${BASE_URL}/routines`)\n            const data = await resp.json()\n            setRoutines(data)\n            console.log(data)\n            setUsername(localStorage.getItem(\"username\"))\n            \n        }\n        fetchRoutines()\n        \n    }, [username])\n\n        console.log(username)\n        \n\n    const filterRoutines = (routine,text) => {\n        if (routine.name.toLowerCase().includes(text.toLowerCase())) {\n          return true\n        }\n      }\n\n    const filteredRoutines = routines.filter (routine => filterRoutines(routine, filter))\n    const routineToDisplay = filter.length > 0 ? filteredRoutines : routines; \n\n    \n\n    return (\n        <>\n            <h1> \n                <input\n                    id=\"filter\"\n                    type=\"text\"\n                    placeholder=\"search routine by name\"\n                    value={filter}\n                    onChange={(event)=> setFilter(event.target.value)}\n                >\n                </input>\n                <button type=\"click\" onclick={filterRoutines}> Filter Routines </button>\n            </h1>\n\n            <h2 className=\"allRoutines\"> View All Routines below...</h2>\n            <br></br>\n            <h3 className=\"toViewAllRoutines\"> {loginSuccess ? null : \"Please Log In to Edit Routines\"} </h3>\n            <h4 className=\"AddRoutines\"> {loginSuccess ? <Link to=\"/addroutines\"> Add Routines </Link> : null} </h4>\n\n            \n\n            {routines && routineToDisplay.map(routine => {\n                return (\n                    <div className=\"routines\" key={routine.id}>\n                        <section> \n                            <h1> \n                            ID: {routine.id}\n                            <br></br>\n                            Creator: {routine.creatorName}\n                            <br></br>\n                            Name: {routine.name}\n                            <br></br>\n                            isPublic: {routine.isPublic ? \"True\" : \"False\"}\n                            <br></br>\n                            Goal: {routine.goal}\n                            <br></br>\n                            Activities:\n                                {routine.activities.map(activity => {\n                                    return (<div key={activity.routineActivityId}>{activity.name}</div>)                                  \n                                })}\n                            {loginSuccess && routine.creatorName === username? <DeleteRoutines routineId={routine.id} token={token}/> : null}\n                            {loginSuccess && routine.creatorName === username? <EditRoutines routineId={routine.id} token={token}/> : null}\n                            </h1>\n                        </section>\n                                           \n                    </div>\n                )\n            })}\n        </>\n    )\n\n}\n\n\nexport default Routines;\n","import { BASE_URL } from '../api';\r\nimport { useHistory ,Link} from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst AddRoutines = ({token}) => {\r\n    // const history = useHistory();\r\n    const [nameString, setName] = useState('')\r\n    const [goalString, setGoal] = useState('')\r\n    const [isPublicBoolean, setIsPublic] = useState(true)\r\n    const [isAdded, setIsAdded] = useState(false)\r\n\r\n    const handleSubmit = async (event) => {\r\n        console.log(\"Testing Add Routines\")\r\n        event.preventDefault();\r\n\r\n    try {\r\n        fetch (`${BASE_URL}/routines`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                name: nameString,\r\n                goal: goalString,\r\n                isPublic: isPublicBoolean\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            setIsAdded(true)\r\n            })\r\n        .catch(console.error);\r\n        // history.push(\"/routines\")\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div classname=\"AddRoutines\"> \r\n            <h1> Add New Routine </h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <input type=\"text\" name=\"name\" value={nameString} placeholder=\"Name of Routine\" onChange={(event) => setName(event.target.value)}/>\r\n                <br></br>\r\n                <input type=\"text\" name=\"goal\" value={goalString} placeholder=\"Goal\" onChange={(event) => setGoal(event.target.value)}/>\r\n                <br></br>\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"isPublic\" value={isPublicBoolean} onChange={(event)=> setIsPublic(event.target.value)}/> \r\n                    Would you like to make this Public?   \r\n                 </label>\r\n                <br></br>\r\n                <button type=\"submit\"> Create Routine </button>\r\n\r\n            </form>\r\n            <h2> <Link to=\"/routines\"> View Routines </Link>  </h2>\r\n            {isAdded ? <Redirect to=\"/routines\"> </Redirect> : null}\r\n            {isAdded ? alert(\"Routine created successfully, we will re-direct you\") : null}\r\n\r\n        </div>)\r\n    \r\n}\r\n\r\nexport default AddRoutines;\r\n","import { BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from 'react';\n\n\n\nconst Home = ({token, username, loginSuccess}) => {\n \n  useEffect(() => {\n    fetch(`${BASE_URL}/users/me`, {\n      method: \"GET\",\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => response.json())\n    .then(result => {\n      console.log(result);\n    })\n    .catch(console.error);\n  })\n  \n\n  return (<div className= \"home\">\n    <h1> {loginSuccess ? `Hello ${username}, welcome back!`: \"Please Login to see your Homepage\"} </h1>\n    \n  </div>)\n}\nexport default Home;","import { BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport EditRoutines from \"./EditRoutine\";\nimport DeleteRoutines from \"./DeleteRoutines\";\n\nconst MyRoutines = ({ token, loginSuccess }) => {\n\n    const [myroutines, setMyRoutines] = useState([])\n    const [activities, setActivities] = useState([])\n    const [activityId, setActivityId] = useState('')\n    const [routineId, setRoutineId] = useState('')\n    const [routineActivityId, setRoutineActivityId] = useState('')\n    const [count, setCount] = useState('')\n    const [duration, setDuration] = useState('')\n    const [addActivities, setAddActivities] = useState(false)\n    const [pickedActivities, setPickedActivities] = useState(false)\n    const [pickedRActivity, setPickedRActivity] = useState(false)\n    const [editRActivity, setEditRActivity] = useState(false)\n    const [raName, setRAname] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n\n    useEffect(() => {\n        const usertoken = localStorage.getItem(\"token\")\n        const userusername = localStorage.getItem(\"username\")\n\n        const fetchMyRoutines = async () => {\n            const resp = await fetch(`${BASE_URL}/users/${userusername}/routines`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + usertoken\n                }\n            })\n            const data = await resp.json()\n            setMyRoutines(data)\n        }\n        fetchMyRoutines()\n    }, [])\n\n    useEffect(() => {\n        const fetchActivities = async () => {\n            const resp = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities')\n            const data = await resp.json()\n            setActivities(data)\n        }\n        fetchActivities()\n    }, [])\n\n    function addActivityToRoutine(activityId, count, duration) {\n        fetch(`${BASE_URL}/routines/${routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                activityId: activityId,\n                count: count,\n                duration: duration\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            }).catch(console.error)\n    }\n\n    function editRoutineActivity(count, duration) {\n        fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                count: count,\n                duration: duration\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            }).catch(console.error)\n    }\n\n    function deleteRoutineActivity() {\n        fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            }).catch(console.error)\n    }\n\n    function activityMatches(activity, text) {\n        if (activity.name.toLowerCase().includes(text.toLowerCase())) {\n            return true\n        }\n    }\n\n    const filteredActivities = activities.filter(activity => activityMatches(activity, searchTerm));\n    const activitiesToDisplay = searchTerm.length > 0 ? filteredActivities : activities;\n\n    if (loginSuccess) {\n        return (\n\n            <>\n                <h1 className=\"YourRoutines\"> Your Routines</h1>\n                <h2 className=\"toViewMyRoutines\"> {loginSuccess ? <Link to=\"/addroutines\"> Add Routines </Link> : \"Please Login to create and edit your routines\"} </h2>\n\n                <h3>\n                    {!pickedRActivity ? myroutines.map(routine => {\n\n                        return (\n                            <div className=\"myroutines\" key={routine.id}>\n                                Routine Id: {routine.id}\n                                <br></br>\n                                Creator Name: {routine.creatorName}\n                                <br></br>\n                                Creator Id: {routine.creatorId}\n                                <br></br>\n                                Routine Name: {routine.name}\n                                <br></br>\n                                Is this Public?: {routine.isPublic ? \"True\" : \"False\"}\n                                <br></br>\n                                Goal: {routine.goal}\n                                <br></br>\n                                Activities:\n                                <br></br>\n                                <br></br>\n                                {routine.activities.map(activity => {\n                                    return (<div key={activity.routineActivityId}>\n                                        Activity Name: {activity.name}\n                                        <br></br>\n                                        Count:{activity.count}\n                                        <br></br>\n                                        Duration: {activity.duration}\n                                        <br />\n                                        {editRActivity ? <><button\n                                            onClick={event => {\n                                                setRoutineActivityId(activity.routineActivityId)\n                                                setPickedRActivity(true)\n                                                setRAname(activity.name)\n                                            }}>Edit or Delete this Activity!</button> </> : null}\n\n\n                                        <br></br>\n                                        <br></br>\n                                    </div>)\n                                })}\n                                <button disabled={editRActivity || addActivities || pickedActivities} onClick={event => { setEditRActivity(true) }}>Click Here to Edit Activities</button>\n                                <button disabled={editRActivity || addActivities || pickedActivities} onClick={async function () {\n                                    setAddActivities(true)\n                                    setRoutineId(routine.id)\n                                }}>Click Here to Add Activities</button>\n                                {editRActivity ? <><button onClick={event => { setEditRActivity(false) }}>Cancel</button></> : null}\n                                {addActivities ? <><button onClick={function () { setAddActivities(false) }}>Cancel</button></> : null}\n\n                                {<DeleteRoutines routineId={routine.id} token={token} />}\n                                {pickedActivities || addActivities ? null : <EditRoutines routineId={routine.id} token={token} />}\n\n\n                                {addActivities ?\n                                    <>\n                                        <div className=\"SearchEverything\">\n                                            <label className=\"SearchText\">Search Posts</label>\n                                            <input className=\"SearchInput\" onChange={event => setSearchTerm(event.target.value)}></input>\n                                        </div>\n                                        <br></br>\n                                        <br></br>\n                                        {activitiesToDisplay.map(activity => {\n                                            return (\n                                                <div className=\"activity\" key={activity.id}>\n                                                    <div>Name: {activity.name}</div>\n                                                    <div className=\"activityDescription\">Description: {activity.description}</div>\n                                                    <button onClick={event => {\n                                                        setPickedActivities(true),\n                                                            setAddActivities(false),\n                                                            setActivityId(activity.id)\n                                                    }}>Add</button>\n                                                </div>\n                                            )\n                                        })}\n                                    </>\n\n                                    : null}\n                                {pickedActivities ?\n                                    <>\n                                        <div>\n                                            <label>Count: </label>\n                                            <input\n                                                id=\"count\"\n                                                type=\"text\"\n                                                placeholder=\"just do ctrl + f\"\n                                                value={count}\n                                                onChange={event => setCount(event.target.value)}\n                                            />\n\n                                            <label>Duration: </label>\n                                            <input\n                                                id=\"duration\"\n                                                type=\"text\"\n                                                placeholder=\"just do ctrl + f\"\n                                                value={duration}\n                                                onChange={event => setDuration(event.target.value)}\n                                            />\n                                            <button onClick={\n                                                event => {\n                                                    addActivityToRoutine(activityId, count, duration)\n                                                    setPickedActivities(false)\n                                                }\n                                            }>Send</button>\n                                            <button onClick={event => { setPickedActivities(false), setAddActivities(true) }}>Cancel</button>\n                                        </div>\n                                    </>\n                                    : null}\n                            </div>\n                        )\n                    }) :\n\n                        <>\n                            {<h1>Edit Activity: {raName} </h1>}\n                            <label>Count: </label>\n                            <input\n                                id=\"count\"\n                                type=\"text\"\n                                placeholder=\"just do ctrl + f\"\n                                value={count}\n                                onChange={event => { setCount(event.target.value) }}\n                            />\n\n                            <label>Duration: </label>\n                            <input\n                                id=\"duration\"\n                                type=\"text\"\n                                placeholder=\"just do ctrl + f\"\n                                value={duration}\n                                onChange={event => { setDuration(event.target.value) }}\n                            />\n                            <button onClick={event => { editRoutineActivity(count, duration), setPickedRActivity(false) }}>Send</button>\n                            <button onClick={event => { setPickedRActivity(false) }}>Cancel</button>\n\n                            <br></br>\n                            <br></br>\n                            {editRActivity ? <><button\n                                onClick={event => {\n                                    deleteRoutineActivity()\n                                    setPickedRActivity(false)\n                                }}>Delete Activity</button></> : null}\n                        </>\n                    } </h3>\n            </>\n\n        )\n    } else {\n        return <>Please Login to View Your Routines</>\n    }\n}\n\nexport default MyRoutines;","import { Link } from \"react-router-dom\"\n\nconst Header = ({loginSuccess, setLoginSuccess}) => {\n    function logoutUser(){\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        setLoginSuccess(false)\n    }\n\n    return (\n        <div className=\"header\">\n            <section className=\"title\">\n                <h1> Fitness Tracker - Exercise More Please! </h1>\n            </section>\n\n            <section className=\"links\"> \n                <nav>\n                    <ul>    \n                        <li> <Link to=\"/routines\"> All Routines </Link></li>\n                        <li> <Link to=\"/myroutines\"> My Routines </Link></li>\n                        <li> <Link to=\"/home\"> Home </Link></li>\n                        <li> <Link to=\"/activities\"> Activities </Link></li>\n                        <li> \n                            {loginSuccess ? <Link to=\"/login\" onClick={(event) => logoutUser(event.target)} > Log Out </Link> \n                            :  <Link to=\"/login\"> Log In </Link>} \n                        </li>\n                    </ul>\n                </nav>\n            </section>\n\n        </div>\n    )\n\n}\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, \nRoute, \nSwitch,\n} from 'react-router-dom';\n\nimport {\nActivities, \nLogin,\nRegister,\nRoutines,\nHome,\nAddRoutines,\nMyRoutines,\nHeader\n} from './components';\n\nconst App =()=> {\n    \n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [ConfirmPassword, setConfirmPassword] = useState(false);\n    const [token, setToken] = useState('');\n\n    useEffect (() => {\n        if (localStorage.getItem(\"token\")){\n            setToken(localStorage.getItem(\"token\"))\n            setUsername(localStorage.getItem(\"username\"))\n            setLoginSuccess(true)\n        }\n    }, [loginSuccess, username])\n\n    return <div className=\"app\">\n        \n        <Router>\n            <div>\n                <Header \n                    loginSuccess={loginSuccess}\n                    setLoginSuccess={setLoginSuccess}\n                />\n\n                <Switch>\n                    <Route exact path= \"/home\">\n                        <Home\n                        token={token}\n                        loginSuccess={loginSuccess}\n                        username={username}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/activities\">\n                        <Activities\n                            token={token}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/login\">\n                        <Login\n                            loginSuccess={loginSuccess}\n                            setLoginSuccess={setLoginSuccess}\n                            username={username}\n                            password={password}\n                            setUsername={setUsername}\n                            setToken={setToken}\n                            token={token}\n                            \n                        />\n                    </Route>\n\n\n                    <Route exact path= \"/register\">\n                        <Register\n                            username={username}\n                            password={password}\n                            ConfirmPassword={ConfirmPassword}\n                            setUsername={setUsername}\n                            setPassword={setPassword}\n                            setConfirmPassword={setConfirmPassword}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/routines\">\n                        <Routines\n                            token={token}\n                            loginSuccess={loginSuccess}\n                            username={username}\n                            setUsername={setUsername}\n                            \n                        />\n                    </Route>\n    \n\n                    <Route exact path= \"/addroutines\">\n                        <AddRoutines\n                            token={token}  \n                        />\n                    </Route>\n    \n\n                    <Route exact path= \"/myroutines\">\n                        <MyRoutines\n                            token={token}\n                            loginSuccess={loginSuccess}\n                            username={username}\n                            \n                        />\n                    </Route>\n\n                    <Route path= \"/\">\n                        <Login\n                        loginSuccess={loginSuccess}\n                        setLoginSuccess={setLoginSuccess}\n                        />\n                    </Route>\n\n                    <Route path=\"*\">\n                        <h1>404 Error - Page Not Found!</h1>\n                    </Route>\n                    \n                </Switch>\n            </div>\n        </Router>\n    </div>\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}