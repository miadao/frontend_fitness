{"version":3,"sources":["api/index.js","components/Activities.js","components/Login.js","components/Register.js","components/EditRoutine.js","components/DeleteRoutines.js","components/Routines.js","components/AddRoutines.js","components/Home.js","components/MyRoutines.js","components/Header.js","index.js"],"names":["BASE_URL","Activities","token","localStorage","getItem","useState","activities","setActivities","name","setName","description","setDescription","editedname","setEditedName","editeddescription","setEditedDescription","isEditing","setIsEditing","requestedRoutines","setRequestedRoutines","routinesToDisplay","setRoutinesToDisplay","idToEdit","setIdToEdit","nameToEdit","setNameToEdit","searchTerm","setSearchTerm","useEffect","fetchActivities","a","fetch","resp","json","data","console","log","filteredActivities","filter","activity","text","toLowerCase","includes","activityMatches","activitiesToDisplay","length","className","type","value","onChange","event","target","onClick","method","headers","body","JSON","stringify","then","response","result","window","location","reload","editActivity","map","disabled","id","activityId","preventDefault","alert","catch","error","newActivity","routine","creatorName","Login","setUsername","loginSuccess","setLoginSuccess","usernameString","setUsernameString","passwordString","setPasswordString","setToken","removeItem","username","password","message","user","setItem","to","Register","setPassword","ConfirmPassword","setConfirmPassword","UserRegistered","setUserRegistered","onSubmit","htmlFor","EditRoutines","routineId","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublicBoolean","setIsPublicBoolean","isEditted","setIsEditted","handleSubmit","goal","isPublic","err","laceholder","placeholder","DeleteRoutines","ClassName","Routines","setFilter","routines","setRoutines","fetchRoutines","filterRoutines","filteredRoutines","routineToDisplay","onclick","routineActivityId","EditRoutine","AddRoutines","nameString","goalString","setGoal","setIsPublic","isAdded","setIsAdded","classname","Home","MyRoutines","myroutines","setMyRoutines","setActivityId","setRoutineId","setRoutineActivityId","count","setCount","duration","setDuration","addActivities","setAddActivities","pickedActivities","setPickedActivities","pickedRActivity","setPickedRActivity","editRActivity","setEditRActivity","raName","setRAname","usertoken","userusername","fetchMyRoutines","editRoutineActivity","creatorId","addActivityToRoutine","Header","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.110458d5.chunk.js","sourcesContent":["export const BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api';","import React, {useEffect, useState} from 'react'\nimport { BASE_URL } from \"../api\";\n\nconst Activities = () => {\n    const token = localStorage.getItem(\"token\")\n\n    const [activities, setActivities] = useState([])\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [editedname, setEditedName] = useState('')\n    const [editeddescription, setEditedDescription] = useState('')\n    const [isEditing, setIsEditing] = useState(false)\n    const [requestedRoutines, setRequestedRoutines] = useState(false)\n    const [routinesToDisplay, setRoutinesToDisplay] = useState([])\n    const [idToEdit, setIdToEdit] = useState('')\n    const [nameToEdit, setNameToEdit] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n  \n    \n\n    useEffect(() => {\n        const fetchActivities = async () => {\n            const resp = await fetch(`${BASE_URL}/activities`)\n            const data = await resp.json()\n            setActivities(data)\n            console.log(data)\n        }\n        fetchActivities()  \n    }, [])\n\n\n    function newActivity(name, description){\n        fetch(`${BASE_URL}/activities`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n            })\n    }\n\n    function editActivity(editedname, editeddescription){\n        fetch(`${BASE_URL}/activities/${idToEdit}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                name: editedname,\n                description: editeddescription\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                window.location.reload(true)\n            })\n    }\n\n    function getRoutinesByActivity(activityId){\n        \n        fetch(`${BASE_URL}/activities/${activityId}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => response.json())\n            .then(result => { \n                if(result.length){\n                    setRequestedRoutines(true)\n                    console.log('success!', result)\n                    setRoutinesToDisplay(result)\n                } else {\n                    console.log('sorry, no activities', result)\n                    setRequestedRoutines(false)\n                    alert('Sorry, no routines for that activity!')\n                    \n                }\n                \n            }).\n            catch(console.error)\n    }\n\n    function activityMatches(activity, text) {\n        if (activity.name.toLowerCase().includes(text.toLowerCase())) {\n            return true\n        }\n    }\n\n    const filteredActivities = activities.filter(activity => activityMatches(activity, searchTerm));\n    const activitiesToDisplay = searchTerm.length > 0 ? filteredActivities : activities;\n\n\n    return ( <>\n     { isEditing ? \n            <>\n                <div className=\"editactivityform\">\n                            <h1>Edit Activity Form</h1>\n                            <h2>Editing Activity: {nameToEdit}</h2>\n                            <label>Activity Name</label>\n                            <input className=\"editactivityname\" type=\"text\" value={editedname} onChange={event => { setEditedName(event.target.value)}}></input>\n                            <label>Activity Description</label>\n                            <input className=\"editactivitydescription\" type=\"text\" value={editeddescription} onChange={event => { setEditedDescription(event.target.value)}}></input>\n                            <button className=\"editactivitybutton\" onClick={function(){editActivity(editedname, editeddescription), setIsEditing(false)}}>Edit Activity!</button>\n                            <button className=\"cancelbutton\" onClick={function (){setIsEditing(false)}}>Cancel</button>\n                            </div> \n            </>\n        :\n       \n            <>\n                \n                <h1>Activities</h1>\n                <div className=\"activitycontainer\">\n                    <div className=\"mapcontainer\">\n                    <div className=\"SearchEverything\">\n                        <label className=\"SearchText\">Search Activities: </label>\n                        <input className=\"SearchInput\" onChange={event => setSearchTerm(event.target.value)}></input>\n                    </div>\n                        {activitiesToDisplay.map(activity => {\n                            return (\n                                <div className=\"activity\" key={activity.id}>\n                                    <div>Name: {activity.name}</div>\n                                    <div className=\"activityDescription\">Description: {activity.description}</div>\n                                    <button className=\"editButton\"  disabled={requestedRoutines || !token} onClick={function(){\n                                        setIsEditing(true)\n                                        setIdToEdit(activity.id)\n                                        setNameToEdit(activity.name)\n                                        console.log(activity.id)\n                                        }}>Edit</button>\n                                        \n                                    <button className=\"seeroutines\" disabled={requestedRoutines} onClick={(event) => { \n                                        event.preventDefault();\n                                        getRoutinesByActivity(activity.id) \n                                        console.log(activity.id)\n                                        }}>See Routines!</button>\n                                </div> \n                            \n                            )  \n                        })}\n                    </div>\n                    <div className=\"newactivityform\">\n                        <h1>New Activity Form</h1>\n                        <label>Activity Name</label>\n                        <input className=\"newactivityname\" type=\"text\" value={name} onChange={event => { setName(event.target.value)}}></input>\n                        <label>Activity Description</label>\n                        <input className=\"newactivitydescription\" type=\"text\" value={description} onChange={event => { setDescription(event.target.value)}}></input>\n                        <button className=\"newactivitybutton\" disabled={!token} onClick={function(){newActivity(name, description)}}>Add Activity!</button>\n                    </div>\n                    \n                    { requestedRoutines ?\n                        <> \n                            <div className=\"routinemapcontainer\">         \n                                <h1>Routines</h1>    \n                                <button className=\"closebutton\" onClick={(event) => {\n                                    event.preventDefault()\n                                    setRequestedRoutines(false)\n                                    }}>Close</button>\n                            \n                                {routinesToDisplay.map(routine => {\n                                    return (\n                                        <div className=\"routine\" key={routine.id}>\n                                            <div>Created By: {routine.creatorName}</div>\n                                            <div>Routine Name: {routine.name} </div>\n                                            <div>Activities: \n                                                {routine.activities.map(activity => {\n                                                    return (<div key={activity.id}>\n                                                                <div>{activity.name}</div>\n                                                                <div>{activity.description}</div>\n                                                            </div>) \n                                                })}\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </>\n                    : null      \n                    }\n                </div>\n            </>          \n    }\n          </> )        \n}\n\nexport default Activities;","import React, {useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { BASE_URL } from \"../api\";\n\nconst Login = ({setUsername, loginSuccess, setLoginSuccess}) => {\n\n    const [usernameString, setUsernameString] = useState('')\n    const [passwordString, setPasswordString] = useState('')\n    const [token, setToken] = useState('')\n    function loginUser(username, password) {\n        fetch(`${BASE_URL}/users/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    \"username\": username,\n                    \"password\": password\n                }\n            )\n        }).then(response => response.json())\n            .then (result => {\n                console.log(result)\n                if(result.message===\"you're logged in!\"){\n                    console.log(result)\n                    setLoginSuccess(true)\n                    setToken(result.token)\n                    setUsername(result.user.username)\n                    localStorage.setItem('token', result.token)\n                    localStorage.setItem('username', result.user.username)\n                } else {\n                    console.log(result)\n                    alert('Incorrect Credentials, try again')\n                    setLoginSuccess(false)\n                }\n                \n                return result\n            }).catch(console.error)\n    }\n\n    \n    function logoutUser(){\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        setLoginSuccess(false)\n    }\n\n    \n\n    return (\n        <div className='Login'>\n            <h1>Login</h1>\n\n            <input className=\"usernameInput\"\n                type=\"username\"\n                value={usernameString}\n                onChange={ event => setUsernameString(event.target.value) }>\n            </input>\n\n            <input className=\"passwordInput\"\n                type=\"password\"\n                value={passwordString}\n                onChange={ event => setPasswordString(event.target.value) }>\n            </input>\n\n            {loginSuccess ? <button className=\"logoutButton\" onClick={() => logoutUser()}> Logout</button> \n            :  <button className=\"loginButton\" onClick={() => loginUser(usernameString, passwordString)} > Login </button> }\n\n            \n            \n            {loginSuccess ? <Redirect to=\"/home\"/> : null }\n            {loginSuccess ? alert (`Welcome ${usernameString}!`) : null}\n            \n            \n\n            <h2> <Link className=\"Register\" to=\"/register\">Don't have an account? Sign Up!</Link></h2>\n            \n\n        </div>\n\n       \n    )\n}\nexport default Login;","import { BASE_URL } from \"../api\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Register = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [ConfirmPassword, setConfirmPassword] = useState('')\n    const [UserRegistered, setUserRegistered] = useState(false)\n\n    const Register = async () => {\n        fetch (`${BASE_URL}/users/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                    \"username\": username,\n                    \"password\": password,\n            })\n        })\n        .then(response => response.json())\n        .then (result => {\n            console.log(result)\n            if(result.message===\"you're signed up!\"){\n                alert(\"You are registered! We will re-direct you, please log in!\");\n                setUserRegistered(true)\n                setToken(result.token)\n                setUsername(result.user.username)\n                localStorage.setItem('token', result.token)\n                localStorage.setItem('username', result.user.username)\n            } else {\n                console.log(result)\n                alert('A user by that username already exists. Please login or re-register with different credentials.')\n                window.location.reload(true)\n                setLoginSuccess(false)\n            } \n            return result\n            \n        }).catch(console.error)\n}\n\n    \n    const confirmPassword = () => {\n        if (password === ConfirmPassword && password.length >= 8) {\n            Register()\n        } else {\n            alert (\"Password must be 8 characters or longer. Please try again.\")\n        }\n    }\n\n    return (\n        <div> \n            <form onSubmit={(event) => {\n                event.preventDefault()\n                confirmPassword()\n            }}> \n                <fieldset>\n                    <label htmlFor=\"Username\"> Create Username</label>\n                    <input\n                        className=\"CreateUsername\"\n                        id=\"Username\"\n                        type=\"text\"\n                        value={username}\n                        onChange={(event)=> setUsername(event.target.value)}\n                    />\n                    <label htmlFor=\"Password\"> Create Password</label>\n                    <input\n                        className=\"CreatePassword\"\n                        id=\"Password\"\n                        type=\"text\"\n                        value={password}\n                        onChange={(event)=> setPassword(event.target.value)}\n                    />\n\n                    <label htmlFor=\"Confirm Password\">Confirm Password</label>\n                        <input\n                            className=\"CreatePassword\"\n                            id=\"confirmPassword\"\n                            type=\"text\"\n                            value={ConfirmPassword}\n                            onChange={(event) => setConfirmPassword(event.target.value)}\n                        />\n                    <button\n                        type=\"submit\"\n                        name=\"event\"\n                    >Register User</button>\n\n                    {UserRegistered ? <Redirect to =\"/login\"/> : null}\n                )       \n                    \n                </fieldset>\n            </form>\n\n        </div>\n    )\n}\nexport default Register;","import { BASE_URL } from \"../api\";\r\nimport { useState } from 'react';\r\n\r\nconst EditRoutines = ({routineId, token}) => {\r\n    const [routineName, setRoutineName] = useState('')\r\n    const [routineGoal, setRoutineGoal] = useState('')\r\n    const [isPublicBoolean, setIsPublicBoolean] = useState(true)\r\n    const [isEditted, setIsEditted] = useState(false)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            fetch(`${BASE_URL}/routines/${routineId}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                name: routineName,\r\n                goal: routineGoal,\r\n                isPublic: isPublicBoolean\r\n            })\r\n            }).then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setIsEditted(true)\r\n                window.location.reload(true) \r\n            })\r\n            .catch(console.error);\r\n        \r\n        }  catch (err) {\r\n            console.error(err)\r\n        } \r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"EditRoutine\"> \r\n                  <h1>Edit Routine</h1>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <label> Name: </label>\r\n                    <input type=\"text\" name=\"name\" value={routineName} laceholder=\"Name of Routine\" onChange={(event)=>setRoutineName(event.target.value)}/>\r\n\r\n                    <label> Goal: </label>\r\n                    <input type=\"text\" name=\"goal\" value={routineGoal} placeholder=\"Routine Goal\" onChange={(event)=>setRoutineGoal(event.target.value)}/>\r\n\r\n                    <label> Make this Public?</label>\r\n                    <input type=\"checkbox\" name=\"isPublic\" value={isPublicBoolean} onChange={(event)=> setIsPublicBoolean(event.target.value)}/>  \r\n\r\n                    <button type=\"submit\"> Finish Edit Routine </button>\r\n                </form>\r\n                {isEditted ? alert (\"You've successfully edit a routine!\") : null}\r\n                {/* {isEditted ?  window.location.reload(true) : null} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRoutines;\r\n","import { BASE_URL  } from \"../api\";\r\n\r\nconst DeleteRoutines = ({token, routineId}) => {\r\n\r\n        const handleDelete = (event) => {\r\n            event.preventDefault()\r\n            fetch (`${BASE_URL}/routines/${routineId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                  }\r\n            }).then(response => response.json())\r\n                .then(result => {\r\n                console.log(result)\r\n                alert(\"Routine Deleted!\")\r\n                window.location.reload(true);\r\n                })\r\n                \r\n                .catch(console.error);\r\n        }\r\n        return (\r\n            <form onSubmit={handleDelete}>\r\n                <div ClassName=\"Delete\">\r\n                    <button type=\"submit\"> Delete</button>\r\n                </div>\r\n            </form>\r\n        )\r\n}\r\nexport default DeleteRoutines;\r\n","import { BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport EditRoutines from \"./EditRoutine\";\nimport DeleteRoutines from \"./DeleteRoutines\";\n\nconst Routines = ({token, loginSuccess}) => {\n\n    const [filter, setFilter] = useState('')\n    const [routines, setRoutines] = useState([])\n    const [username, setUsername] = useState('')\n    \n    useEffect(() => {\n        const fetchRoutines = async () => {\n            const resp = await fetch(`${BASE_URL}/routines`)\n            const data = await resp.json()\n            setRoutines(data)\n            console.log(data)\n            setUsername(localStorage.getItem(\"username\"))\n            \n        }\n        fetchRoutines()\n        \n    }, [username])\n        console.log(username)\n        \n    const filterRoutines = (routine,text) => {\n        if (routine.name.toLowerCase().includes(text.toLowerCase())) {\n          return true\n        }\n      }\n\n    const filteredRoutines = routines.filter (routine => filterRoutines(routine, filter))\n    const routineToDisplay = filter.length > 0 ? filteredRoutines : routines; \n\n    return (\n        <>\n            <h1> \n                <input\n                    id=\"filter\"\n                    type=\"text\"\n                    placeholder=\"search routine by name\"\n                    value={filter}\n                    onChange={(event)=> setFilter(event.target.value)}\n                >\n                </input>\n                <button type=\"click\" onclick={filterRoutines}> Filter Routines </button>\n            </h1>\n\n            <h2 className=\"allRoutines\"> View All Routines below...</h2>\n            <br></br>\n            <h3 className=\"toViewAllRoutines\"> {loginSuccess ? null : \"Please Log In to Edit Routines\"} </h3>\n            <h4 className=\"AddRoutines\"> {loginSuccess ? <Link to=\"/addroutines\"> Add Routines </Link> : null} </h4>\n\n            {routines && routineToDisplay.map(routine => {\n                return (\n                    <div className=\"routines\" key={routine.id}>\n                        <section> \n                            <h1> \n                            ID: {routine.id}\n                            <br></br>\n                            Creator: {routine.creatorName}\n                            <br></br>\n                            Name: {routine.name}\n                            <br></br>\n                            isPublic: {routine.isPublic ? \"True\" : \"False\"}\n                            <br></br>\n                            Goal: {routine.goal}\n                            <br></br>\n                            Activities:\n                                {routine.activities.map(activity => {\n                                    return (<div key={activity.routineActivityId}>{activity.name}</div>)                                  \n                                })}\n                            {loginSuccess && routine.creatorName === username? <DeleteRoutines routineId={routine.id} token={token}/> : null}\n                            {loginSuccess && routine.creatorName === username? <EditRoutines routineId={routine.id} token={token}/> : null}\n                            </h1>\n                        </section>\n                                           \n                    </div>\n                )\n            })}\n        </>\n    )\n\n}\n\n\nexport default Routines;\n","import { BASE_URL } from '../api';\r\nimport { Link} from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst AddRoutines = ({token}) => {\r\n    const [nameString, setName] = useState('')\r\n    const [goalString, setGoal] = useState('')\r\n    const [isPublicBoolean, setIsPublic] = useState(true)\r\n    const [isAdded, setIsAdded] = useState(false)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n    try {\r\n        fetch (`${BASE_URL}/routines`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                name: nameString,\r\n                goal: goalString,\r\n                isPublic: isPublicBoolean\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            setIsAdded(true)\r\n            })\r\n        .catch(console.error);\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div classname=\"AddRoutines\"> \r\n            <h1> Add New Routine </h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <input type=\"text\" name=\"name\" value={nameString} placeholder=\"Name of Routine\" onChange={(event) => setName(event.target.value)}/>\r\n                <br></br>\r\n                <input type=\"text\" name=\"goal\" value={goalString} placeholder=\"Goal\" onChange={(event) => setGoal(event.target.value)}/>\r\n                <br></br>\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"isPublic\" value={isPublicBoolean} onChange={(event)=> setIsPublic(event.target.value)}/> \r\n                    Would you like to make this Public?   \r\n                 </label>\r\n                <br></br>\r\n                <button type=\"submit\"> Create Routine </button>\r\n\r\n            </form>\r\n            <h2> <Link to=\"/routines\"> View Routines </Link>  </h2>\r\n            {isAdded ? <Redirect to=\"/routines\"> </Redirect> : null}\r\n            {isAdded ? alert(\"Routine created successfully, we will re-direct you\") : null}\r\n\r\n        </div>)\r\n    \r\n}\r\n\r\nexport default AddRoutines;\r\n","import { BASE_URL } from \"../api\";\nimport React, { useEffect } from 'react';\n\n\n\nconst Home = ({token, username, loginSuccess}) => {\n \n  useEffect(() => {\n    fetch(`${BASE_URL}/users/me`, {\n      method: \"GET\",\n      headers:{\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => response.json())\n    .then(result => {\n      console.log(result);\n    })\n    .catch(console.error);\n  })\n  \n\n  return (<div className= \"home\">\n    <h1> {loginSuccess ? `Hello ${username}, welcome back!`: \"Please Login to see your Homepage\"} </h1>\n    \n  </div>)\n}\nexport default Home;","import { BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport EditRoutines from \"./EditRoutine\";\nimport DeleteRoutines from \"./DeleteRoutines\";\nconst MyRoutines = ({ token, loginSuccess }) => {\n    const [myroutines, setMyRoutines] = useState([])\n    const [activities, setActivities] = useState([])\n    const [activityId, setActivityId] = useState('')\n    const [routineId, setRoutineId] = useState('')\n    const [routineActivityId, setRoutineActivityId] = useState('')\n    const [count, setCount] = useState('')\n    const [duration, setDuration] = useState('')\n    const [addActivities, setAddActivities] = useState(false)\n    const [pickedActivities, setPickedActivities] = useState(false)\n    const [pickedRActivity, setPickedRActivity] = useState(false)\n    const [editRActivity, setEditRActivity] = useState(false)\n    const [raName, setRAname] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    useEffect(() => {\n        const usertoken = localStorage.getItem(\"token\")\n        const userusername = localStorage.getItem(\"username\")\n        const fetchMyRoutines = async () => {\n            const resp = await fetch(`${BASE_URL}/users/${userusername}/routines`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + usertoken\n                }\n            })\n            const data = await resp.json()\n            setMyRoutines(data)\n        }\n        fetchMyRoutines()\n    }, [])\n    useEffect(() => {\n        const fetchActivities = async () => {\n            const resp = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities')\n            const data = await resp.json()\n            setActivities(data)\n        }\n        fetchActivities()\n    }, [])\n    function addActivityToRoutine(activityId, count, duration) {\n        fetch(`${BASE_URL}/routines/${routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                activityId: activityId,\n                count: count,\n                duration: duration\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n                console.log(result)\n            }).catch(console.error)\n    }\n    function editRoutineActivity(count, duration) {\n        fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                count: count,\n                duration: duration\n            })\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            }).catch(console.error)\n    }\n    function deleteRoutineActivity() {\n        fetch(`${BASE_URL}/routine_activities/${routineActivityId}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(response => response.json())\n            .then(result => {\n                window.location.reload(true);\n            }).catch(console.error)\n    }\n    function activityMatches(activity, text) {\n        if (activity.name.toLowerCase().includes(text.toLowerCase())) {\n            return true\n        }\n    }\n    const filteredActivities = activities.filter(activity => activityMatches(activity, searchTerm));\n    const activitiesToDisplay = searchTerm.length > 0 ? filteredActivities : activities;\n    if (loginSuccess) {\n        return (\n            <>\n                <h1 className=\"YourRoutines\"> Your Routines</h1>\n                <h2 className=\"toViewMyRoutines\"> {loginSuccess ? <Link to=\"/addroutines\"> Add Routines </Link> : \"Please Login to create and edit your routines\"} </h2>\n                <h3>\n                    {!pickedRActivity ? myroutines.map(routine => {\n                        return (\n                            <div className=\"myroutines\" key={routine.id}>\n                                Routine Id: {routine.id}\n                                <br></br>\n                                Creator Name: {routine.creatorName}\n                                <br></br>\n                                Creator Id: {routine.creatorId}\n                                <br></br>\n                                Routine Name: {routine.name}\n                                <br></br>\n                                Is this Public?: {routine.isPublic ? \"True\" : \"False\"}\n                                <br></br>\n                                Goal: {routine.goal}\n                                <br></br>\n                                Activities:\n                                <br></br>\n                                <br></br>\n                                {routine.activities.map(activity => {\n                                    return (<div key={activity.routineActivityId}>\n                                        Activity Name: {activity.name}\n                                        <br></br>\n                                        Count:{activity.count}\n                                        <br></br>\n                                        Duration: {activity.duration}\n                                        <br />\n                                        {editRActivity ? <><button\n                                            onClick={event => {\n                                                setRoutineActivityId(activity.routineActivityId)\n                                                setPickedRActivity(true)\n                                                setRAname(activity.name)\n                                            }}>Edit or Delete this Activity!</button> </> : null}\n                                        <br></br>\n                                        <br></br>\n                                    </div>)\n                                })}\n                                <button disabled={editRActivity || addActivities || pickedActivities} onClick={event => { setEditRActivity(true) }}>Click Here to Edit Activities</button>\n                                <button disabled={editRActivity || addActivities || pickedActivities} onClick={async function () {\n                                    setAddActivities(true)\n                                    setRoutineId(routine.id)\n                                }}>Click Here to Add Activities</button>\n                                {editRActivity ? <><button onClick={event => { setEditRActivity(false) }}>Cancel</button></> : null}\n                                {addActivities ? <><button onClick={function () { setAddActivities(false) }}>Cancel</button></> : null}\n                                {<DeleteRoutines routineId={routine.id} token={token} />}\n                                {pickedActivities || addActivities ? null : <EditRoutines routineId={routine.id} token={token} />}\n                                {addActivities ?\n                                    <>\n                                        <div className=\"SearchEverything\">\n                                            <label className=\"SearchText\">Search Activities</label>\n                                            <input className=\"SearchInput\" onChange={event => setSearchTerm(event.target.value)}></input>\n                                        </div>\n                                        <br></br>\n                                        <br></br>\n                                        {activitiesToDisplay.map(activity => {\n                                            return (\n                                                <div className=\"activity\" key={activity.id}>\n                                                    <div>Name: {activity.name}</div>\n                                                    <div className=\"activityDescription\">Description: {activity.description}</div>\n                                                    <button onClick={event => {\n                                                            setPickedActivities(true),\n                                                            setAddActivities(false),\n                                                            setActivityId(activity.id)\n                                                    }}>Add</button>\n                                                </div>\n                                            )\n                                        })}\n                                    </>\n                                    : null}\n                                {pickedActivities ?\n                                    <>\n                                        <div>\n                                            <label>Count: </label>\n                                            <input\n                                                id=\"count\"\n                                                type=\"text\"\n                                                placeholder=\"just do ctrl + f\"\n                                                value={count}\n                                                onChange={event => setCount(event.target.value)}\n                                            />\n                                            <label>Duration: </label>\n                                            <input\n                                                id=\"duration\"\n                                                type=\"text\"\n                                                placeholder=\"just do ctrl + f\"\n                                                value={duration}\n                                                onChange={event => setDuration(event.target.value)}\n                                            />\n                                            <button onClick={\n                                                event => {\n                                                    addActivityToRoutine(activityId, count, duration)\n                                                    setPickedActivities(false)\n                                                }\n                                            }>Send</button>\n                                            <button onClick={event => { setPickedActivities(false), setAddActivities(true) }}>Cancel</button>\n                                        </div>\n                                    </>\n                                    : null}\n                            </div>\n                        )\n                    }) :\n                        <>\n                            {<h1>Edit Activity: {raName} </h1>}\n                            <label>Count: </label>\n                            <input\n                                id=\"count\"\n                                type=\"text\"\n                                placeholder=\"just do ctrl + f\"\n                                value={count}\n                                onChange={event => { setCount(event.target.value) }}\n                            />\n                            <label>Duration: </label>\n                            <input\n                                id=\"duration\"\n                                type=\"text\"\n                                placeholder=\"just do ctrl + f\"\n                                value={duration}\n                                onChange={event => { setDuration(event.target.value) }}\n                            />\n                            <button onClick={event => { editRoutineActivity(count, duration), setPickedRActivity(false) }}>Send</button>\n                            <button onClick={event => { setPickedRActivity(false) }}>Cancel</button>\n                            <br></br>\n                            <br></br>\n                            {editRActivity ? <><button\n                                onClick={event => {\n                                    deleteRoutineActivity()\n                                    setPickedRActivity(false)\n                                }}>Delete Activity</button></> : null}\n                        </>\n                    } </h3>\n            </>\n        )\n    } else {\n        return <>Please Login to View Your Routines</>\n    }\n}\nexport default MyRoutines;","import { Link } from \"react-router-dom\"\n\nconst Header = ({loginSuccess, setLoginSuccess}) => {\n    function logoutUser(){\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        setLoginSuccess(false)\n    }\n\n    return (\n        <div className=\"header\">\n            <section className=\"title\">\n                <h1> Fitness Tracker - Exercise More Please! </h1>\n            </section>\n\n            <section className=\"links\"> \n                <nav>\n                    <ul>    \n                        <li> <Link to=\"/routines\"> All Routines </Link></li>\n                        <li> <Link to=\"/myroutines\"> My Routines </Link></li>\n                        <li> <Link to=\"/home\"> Home </Link></li>\n                        <li> <Link to=\"/activities\"> Activities </Link></li>\n                        <li> \n                            {loginSuccess ? <Link to=\"/login\" onClick={(event) => logoutUser(event.target)} > Log Out </Link> \n                            :  <Link to=\"/login\"> Log In </Link>} \n                        </li>\n                    </ul>\n                </nav>\n            </section>\n\n        </div>\n    )\n\n}\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, \nRoute, \nSwitch,\n} from 'react-router-dom';\n\nimport {\nActivities, \nLogin,\nRegister,\nRoutines,\nHome,\nAddRoutines,\nMyRoutines,\nHeader\n} from './components';\n\nconst App =()=> {\n    \n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [ConfirmPassword, setConfirmPassword] = useState(false);\n    const [token, setToken] = useState('');\n\n    useEffect (() => {\n        if (localStorage.getItem(\"token\")){\n            setToken(localStorage.getItem(\"token\"))\n            setUsername(localStorage.getItem(\"username\"))\n            setLoginSuccess(true)\n        }\n    }, [loginSuccess, username])\n\n    return <div className=\"app\">\n        \n        <Router>\n            <div>\n                <Header \n                    loginSuccess={loginSuccess}\n                    setLoginSuccess={setLoginSuccess}\n                />\n\n                <Switch>\n                    <Route exact path= \"/home\">\n                        <Home\n                        token={token}\n                        loginSuccess={loginSuccess}\n                        username={username}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/activities\">\n                        <Activities\n                            token={token}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/login\">\n                        <Login\n                            loginSuccess={loginSuccess}\n                            setLoginSuccess={setLoginSuccess}\n                            username={username}\n                            password={password}\n                            setUsername={setUsername}\n                            setToken={setToken}\n                            token={token}\n                            \n                        />\n                    </Route>\n\n\n                    <Route exact path= \"/register\">\n                        <Register\n                            username={username}\n                            password={password}\n                            ConfirmPassword={ConfirmPassword}\n                            setUsername={setUsername}\n                            setPassword={setPassword}\n                            setConfirmPassword={setConfirmPassword}\n                        />\n                    </Route>\n\n                    <Route exact path= \"/routines\">\n                        <Routines\n                            token={token}\n                            loginSuccess={loginSuccess}\n                            username={username}\n                            setUsername={setUsername}\n                            \n                        />\n                    </Route>\n    \n\n                    <Route exact path= \"/addroutines\">\n                        <AddRoutines\n                            token={token}  \n                        />\n                    </Route>\n    \n\n                    <Route exact path= \"/myroutines\">\n                        <MyRoutines\n                            token={token}\n                            loginSuccess={loginSuccess}\n                            username={username}\n                            \n                        />\n                    </Route>\n\n                    <Route path= \"/\">\n                        <Login\n                        loginSuccess={loginSuccess}\n                        setLoginSuccess={setLoginSuccess}\n                        />\n                    </Route>\n\n                    <Route path=\"*\">\n                        <h1>404 Error - Page Not Found!</h1>\n                    </Route>\n                    \n                </Switch>\n            </div>\n        </Router>\n    </div>\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}